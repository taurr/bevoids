name: Check

on:
  push:
    paths-ignore:
      - '*.md'
      - 'LICENSE*'
  pull_request:
    branches: [ main ]
    paths-ignore:
      - '*.md'
      - 'LICENSE*'

env:
  CARGO_TERM_COLOR: always

jobs:
  check:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        toolchain: [nightly]
        cargo-cmd:
          - check
          - fmt --all -- --check
          - clippy --all-targets --all-features -- -D warnings
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup | rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          default: true
          profile: minimal
          components: clippy, rustfmt
      - name: Setup | CI dependencies
        run: sudo apt-get update; sudo apt-get install --no-install-recommends -y libasound2-dev libxcb-render0-dev libxcb-shape0-dev libxcb-xfixes0-dev libudev-dev
        if: runner.os == 'linux'
      - uses: Swatinem/rust-cache@v1
      - run: cargo ${{ matrix['cargo-cmd'] }}

  build-linux:
    needs: check
    strategy:
      matrix:
        toolchain: [nightly]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          lfs: true
      - name: Checkout LFS objects
        run: git lfs checkout

      - name: Setup | rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          default: true
          profile: minimal
          components: clippy, rustfmt
      - name: Setup | CI dependencies
        run: sudo apt-get update; sudo apt-get install --no-install-recommends -y libasound2-dev libxcb-render0-dev libxcb-shape0-dev libxcb-xfixes0-dev libudev-dev
        if: runner.os == 'linux'

      - uses: Swatinem/rust-cache@v1
      - name: Build
        run: cargo build --release && strip target/release/bevoids  && mv target/release/bevoids target/release/bevoids_linux

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            target/release/bevoids_linux
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-win:
    needs: check
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          lfs: true
      - name: Checkout LFS objects
        run: git lfs checkout

      - name: Setup | rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          default: true
          profile: minimal

      - uses: Swatinem/rust-cache@v1
      - name: Build
        run: cargo build --release

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            target/release/bevoids.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-mac:
    needs: check
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          lfs: true
      - name: Checkout LFS objects
        run: git lfs checkout

      - name: Setup | rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-apple-darwin
          default: true
          profile: minimal

      - uses: Swatinem/rust-cache@v1
      - name: Build
        run: cargo build --release && strip target/release/bevoids  && mv target/release/bevoids target/release/bevoids_macos

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            target/release/bevoids_macos
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
